<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.wx.dao.InAndOutSchoolMapper">
  <resultMap id="BaseResultMap" type="com.example.wx.model.InAndOutSchool">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="userbh" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="inouttype" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="inouttime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="place" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="inoutmemo" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="addfield" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="createtime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="isdel" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userbh, inouttype, inouttime, place, inoutmemo, addfield, createtime, isdel
  </sql>
  <select id="selectByExample" parameterType="com.example.wx.model.InAndOutSchoolExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from InAndOutSchool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from InAndOutSchool
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from InAndOutSchool
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.wx.model.InAndOutSchoolExample">
    delete from InAndOutSchool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.wx.model.InAndOutSchool">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into InAndOutSchool (userbh, inouttype, inouttime, 
      place, inoutmemo, addfield, 
      createtime, isdel)
    values (#{userbh,jdbcType=VARCHAR}, #{inouttype,jdbcType=VARCHAR}, #{inouttime,jdbcType=TIMESTAMP}, 
      #{place,jdbcType=VARCHAR}, #{inoutmemo,jdbcType=VARCHAR}, #{addfield,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{isdel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.wx.model.InAndOutSchool">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into InAndOutSchool
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userbh != null">
        userbh,
      </if>
      <if test="inouttype != null">
        inouttype,
      </if>
      <if test="inouttime != null">
        inouttime,
      </if>
      <if test="place != null">
        place,
      </if>
      <if test="inoutmemo != null">
        inoutmemo,
      </if>
      <if test="addfield != null">
        addfield,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="isdel != null">
        isdel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userbh != null">
        #{userbh,jdbcType=VARCHAR},
      </if>
      <if test="inouttype != null">
        #{inouttype,jdbcType=VARCHAR},
      </if>
      <if test="inouttime != null">
        #{inouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="inoutmemo != null">
        #{inoutmemo,jdbcType=VARCHAR},
      </if>
      <if test="addfield != null">
        #{addfield,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.wx.model.InAndOutSchoolExample" resultType="java.lang.Long">
    select count(*) from InAndOutSchool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update InAndOutSchool
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userbh != null">
        userbh = #{record.userbh,jdbcType=VARCHAR},
      </if>
      <if test="record.inouttype != null">
        inouttype = #{record.inouttype,jdbcType=VARCHAR},
      </if>
      <if test="record.inouttime != null">
        inouttime = #{record.inouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.place != null">
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.inoutmemo != null">
        inoutmemo = #{record.inoutmemo,jdbcType=VARCHAR},
      </if>
      <if test="record.addfield != null">
        addfield = #{record.addfield,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isdel != null">
        isdel = #{record.isdel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update InAndOutSchool
    set id = #{record.id,jdbcType=BIGINT},
      userbh = #{record.userbh,jdbcType=VARCHAR},
      inouttype = #{record.inouttype,jdbcType=VARCHAR},
      inouttime = #{record.inouttime,jdbcType=TIMESTAMP},
      place = #{record.place,jdbcType=VARCHAR},
      inoutmemo = #{record.inoutmemo,jdbcType=VARCHAR},
      addfield = #{record.addfield,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      isdel = #{record.isdel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.wx.model.InAndOutSchool">
    update InAndOutSchool
    <set>
      <if test="userbh != null">
        userbh = #{userbh,jdbcType=VARCHAR},
      </if>
      <if test="inouttype != null">
        inouttype = #{inouttype,jdbcType=VARCHAR},
      </if>
      <if test="inouttime != null">
        inouttime = #{inouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null">
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="inoutmemo != null">
        inoutmemo = #{inoutmemo,jdbcType=VARCHAR},
      </if>
      <if test="addfield != null">
        addfield = #{addfield,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdel != null">
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.wx.model.InAndOutSchool">
    update InAndOutSchool
    set userbh = #{userbh,jdbcType=VARCHAR},
      inouttype = #{inouttype,jdbcType=VARCHAR},
      inouttime = #{inouttime,jdbcType=TIMESTAMP},
      place = #{place,jdbcType=VARCHAR},
      inoutmemo = #{inoutmemo,jdbcType=VARCHAR},
      addfield = #{addfield,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      isdel = #{isdel,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>